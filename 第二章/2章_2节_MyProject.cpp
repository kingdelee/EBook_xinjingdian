// MyProject.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//
//公众号：程序员速成   ，内含优质视频教程，欢迎关注
#include <iostream>

int main()
{		
	{
		printf("3+2=%d\n", 3 + 2);
		printf("5-2=%d\n", 5 - 2);
		printf("2-5=%d\n", 2 - 5);
		printf("3*9=%d\n", 3 * 9);
		printf("5/3=%d\n", 5 / 3);
		printf("7%4=%d\n", 7 % 4);

		printf("2+3*5=%d\n", 2 + 3 * 5);
		printf("2+8-5=%d\n", 2 + 8 - 5);

		printf("(3+2)*8=%d\n", (3 + 2) * 8);				

	}
	{
		float x;
		int i;
		x = 3.6; //可以写成3.6f;
		i = (int)x;  //如果不用强制转换一下，这里就会出现警告：从“float”转换到“int”，可能丢失数据
					//有些资料上强调不要写成 int(x)，其实如果你写成int(x)，应该也是可以的。
		printf("x = %f, i = %d\n", x, i); //x =  3.600000, i =  3
	}

	{
		float x = 8.32f;	
		int result = (int)x % 3; //必须转成int才能参与%运算
		printf("result = %d\n", result); //result = 2		
	}

	{
		int i = 8;
		i++; // 8 + 1 = 9
		--i; // 9 - 1 = 8
		++i; // 8 + 1 = 9
		i--; // 9 - 1 = 8
		printf("i = %d\n", i); //i = 8
	}
	{		
		int i = 3;
		printf("i = %d\n", ++i); //i = 4
	}
	{
		int i = 3;
		printf("i = %d\n", i++); //i = 3
	}
	{
		int i = 1, j = 1;
		-i++;  //实际上等价于-(i++);
		i+++j; //实际上等价于(i++)+j;c编译器在处理时会尽可能多的从左到右将若干字符组成一个运算符但仍极度不建议这么写
	}
	
}


// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门提示: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
