// MyProject.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//
//公众号：程序员速成   ，内含优质视频教程，欢迎关注

//#include "stdio.h"  写不写都可以
#include <iostream>


int main() //主函数
{
	{
		int i=7, j=9;  //定义了两个普通的整型变量
		float k = 12.6f;
		int *mypoint1, *mypoint2; //定义两个指针变量，这两个指针变量都是指向整型变量的。
							  //指针变量定义时变量名前有个*，这是和普通变量最明显的区别；
		float *pm3;  //指向实型变量的指针
		char *pm4;  //指向字符型变量的指针

		mypoint1 = &i;  //mypoint1指向了i
		mypoint2 = &j;  //mypoint2指向了j

		//pm3 = &i;  //这会出现编译错误，因为pm3在定义时是一个指向实型变量的指针(i整型)
		pm3 = &k;  //这是正确的，k是float类型，pm3是指向float类型的指针

		printf("断点掐到这里方便观察\n");

	}
	{
		//int *mypoint1 = 4;   //mypoint1是个指针变量，而4是个整数
					//虽然地址也是个整数，但这样直接赋值就是不行

	}
	{
		int a, b;
		int*p1, *p2;// *指针运算符用于定义两个指针变量。这个*在这里只表示该变量是指针变量
		a = 100;
		b = 200;
		p1 = &a;   //把变量a的地址赋给p1; 主要不要写成 *p1 = &a，p1才是指针变量;
				   //现在p1指向了a；
		p2 = &b;   //把变量b的地址赋给p2;
					//现在p2指向了b；

		int *p3 = &a; //这个写法可以，这属于定义的时候初始化，现在p3指向a

		printf("%d,%d\n", a, b); //100,200

		//*指针运算符不用于定义变量指针的场合时，代表的是它所指向的变量
		printf("%d,%d\n", *p1, *p2); //100,200  ，*p1代表a，*p2代表b;

		
		//p2 = &*p1; //等价于 p2 = p1;也就是说p2和p1都指向a;
		//b = *&a;   //*&a其实就是a
		//(*p1)++;     //*p1就相当于a，这就相当于a++;

		*(p1++)=5;  //a的值变成了5，p1指向了变量a之后的地址

		printf("断点掐到这里方便观察\n");
	}

	{
		int *pmax, *pmin, *p, a, b; //pmax指向大的值，pmin指向小的值
		a = 5;
		b = 8;
		pmax = &a; //pmax指向a
		pmin = &b; //pmin指向b
		if (a < b)  //b大
		{
			//为了演示指针变量的赋值，所以我们写的啰嗦一点
			p = pmax;  //现在p指向a
			pmax = pmin; //现在pmax指向b (指向大的值)
			pmin = p;  //现在pmin指向a (指向小的值)
		}
		printf("a = %d,b = %d\n", a, b); //a = 5,b = 8
		printf("max = %d, min = %d\n", *pmax, *pmin); //max = 8, min = 5

	}
	
	return 0;
}


// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门提示: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
