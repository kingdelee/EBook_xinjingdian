// MyProject.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//
//公众号：程序员速成   ，内含优质视频教程，欢迎关注

//#include "stdio.h"  写不写都可以
#include <iostream>


int main() //主函数
{	
	{
		int a[5]; //能引用的数组元素下标是a[0]-a[4] 
					//并且注意，只要是数组，那么数组元素的内存一定是紧挨着的
		a[0] = 5; a[1] = 6; a[2] = 7; a[3] = 8; a[4] = 9;
		//可以看看 a 是否等价于 &a[0]
		printf("断点掐到这里\n");

	}

	{
		int a[5];  //定义a为包含5个整型数的数组
		a[0] = 5; a[1] = 6; a[2] = 7; a[3] = 8; a[4] = 9;
		int *p;    //定义p为指向整型变量的指针变量，和数组类型相同。
		p = &a[0]; //把a[0]元素的地址赋给指针变量p，即p指向数组第0号元素

		*p = 19;   //这个比较简单，表示对p当前所指向的数组元素赋值19；也就是a[0] = 19;
		p = p + 1; //p相当于往后跳了4个字节（因为int是占4个字节的）
		p = a + 3; 
		printf("*a = %d\n",*a); //19
		printf("断点掐到这里\n");
	}

	{
		int a[5]; //能够引用的数组元素a[0]-a[4];
		int* p;
		int i;
		a[0] = 12; a[1] = 14; a[2] = 20; a[3] = 18; a[4] = 50;

		for (i = 0; i < 5; i++)
		{
			printf("%d\n", a[i]); //12   14     20    18   50
		}

		for (i = 0; i < 5; i++)
		{
			printf("%d\n", *(a + i)); //12   14     20    18   50
		}

		printf("-------------------------\n");
		for (p = a; p < (a + 5); p++) //注意这里p值不断变化
		{
			printf("%d\n", *p);   //12   14     20    18   50
		}

		//a++;
	}
	{
		int a[5]; //能够引用的数组元素a[0]-a[4];
		int *p;
		int i;
		a[0] = 12; a[1] = 14; a[2] = 20; a[3] = 18; a[4] = 50;
		p = a;
		printf("%d\n", *p++); //这里输出的是12(a[0]的值)，p指向a[1]了；

	}
	{
		int a[5]; //能够引用的数组元素a[0]-a[4];
		int* p;
		int i;
		a[0] = 12; a[1] = 14; a[2] = 20; a[3] = 18; a[4] = 50;
		p = a;
		printf("%d\n", *++p); //这里输出的是14(a[1]的值)，p指向a[1]了；
	}
	
	{
		int a[5]; //能够引用的数组元素a[0]-a[4];
		int* p;
		int i;
		a[0] = 12; a[1] = 14; a[2] = 20; a[3] = 18; a[4] = 50;
		p = a;
		printf("%d\n", (*p)++); //这里输出的是13(a[0]的值)，p依旧指向a[0]；
		printf("断点掐到这里\n");
	}

	return 0;
}


// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门提示: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
